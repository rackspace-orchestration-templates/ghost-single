heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running Ghost CMS.

parameter_groups:

- label: Server Settings
  parameters:
  - flavor
  - image

- label: Ghost Settings
  parameters:
  - domain
  - username
  - version

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - database_name
  - kitchen
  - chef_version

parameters:

  # Server settings
  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 4 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  # Ghost settings
  domain:
    label: Site Domain
    description: Domain to be used with Ghost site
    type: string
    default: "ghost.example.com"
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9.-]{1,255}.[a-zA-Z]{2,15}$"
      description: Must be a valid domain name

  version:
    label: Ghost version
    description: Ghost version to be used
    type: string
    default: latest
    constraints:
    - allowed_pattern: "^\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}$|latest"
      description: Must be a valid Ghost version.

  # Database and system user configuration
  database_name:
    description: Ghost database name
    type: string
    default: ghost
    constraints:
    - allowed_pattern: "^[0-9a-zA-Z$_]{1,64}$"
      description: |
        Maximum length of 64 characters, may only contain letters, numbers, and
        underscores.

  username:
    label: Username
    description: "Login name for both the database and system user"
    type: string
    default: ghost
    constraints:
    - allowed_pattern: "^(.){1,16}$"
      description: |
        Must be shorter than 16 characters, this is due to MySQL's maximum
        username length.

  kitchen:
    description: "URL for a git repo containing required cookbooks"
    type: string
    default: https://github.com/rackspace-orchestration-templates/ghost-single

  chef_version:
    description: Version of chef client to use
    type: string
    default: 11.12.8

resources:
  # Random password generation
  user_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  database_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_root_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_repl_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_debian_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  # SSH key
  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  # Server resources
  ghost_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: ghost
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  # Chef resources
  ghost_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: ghost_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [ghost_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        authorization:
          sudo:
            users: [ { get_param: username } ]
        ghost:
          db_admin_password: { get_attr: [mysql_root_password, value] }
          db_user: { get_param: username }
          db_password: { get_attr: [database_password, value] }
          password: { get_attr: [user_password, value] }
          domain: { get_param: domain }
          ghost_version: { get_param: version }
        hollandbackup:
          main:
            backup_directory: "/var/lib/mysqlbackup"
            mysqldump:
              user: "root"
              host: "localhost"
              password: { get_attr: [mysql_root_password, value] }
        mysql:
          bind_address: "127.0.0.1"
          server_root_password: { get_attr: [mysql_root_password, value] }
          server_repl_password: { get_attr: [mysql_repl_password, value] }
          server_debian_password: { get_attr: [mysql_debian_password, value] }
          remove_test_database: true
          remove_anonymous_users: true
        run_list: ["recipe[apt]",
                   "recipe[postfix]",
                   "recipe[mysql::server]",
                   "recipe[hollandbackup]",
                   "recipe[hollandbackup::mysqldump]",
                   "recipe[hollandbackup::main]",
                   "recipe[hollandbackup::backupsets]",
                   "recipe[hollandbackup::cron]",
                   "recipe[ghost::database]",
                   "recipe[ghost::default]",
                   "recipe[ghost::nginx]",
                   "recipe[ghost::firewall]"]

outputs:
  private_key:
    value: { get_attr: [ssh_key, private_key] }
    description: "SSH Private Key"

  server_ip:
    value: { get_attr: [ghost_server, accessIPv4] }
    description: "Server IP"

  ghost_url:
    value:
      str_replace:
        template: "http://%server_ip%"
        params:
          "%server_ip%": { get_attr: [ ghost_server, accessIPv4 ] }
    description: URL for accessing Ghost

  ghost_user:
    value: { get_param: username }
    description: "Ghost User"

  ghost_user_password:
    value: { get_attr: [user_password, value] }
    description: "Ghost Password"
